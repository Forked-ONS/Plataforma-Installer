version: "2"

services:
  postgres:
    image: postgres:latest
    container_name: "postgres"
    ports:
      - 5432:5432
  mongo:
    image: mongo:latest
    container_name: "mongo"
    ports:
      - 27017:27017
  adminer:
    image: adminer:latest
    container_name: "adminer"
    ports:
      - 8080:8080
  pgadmin:
    image: fenglc/pgadmin4:latest
    container_name: "pgadmin"
    ports:
      - 5050:5050
  process_memory:
    build:
      context: ./Dockerfiles
      dockerfile: ProcessMemory
    container_name: "process_memory"
    ports:
      - 9091:9091
    environment:
      - MONGO_HOST=mongo
  apicore:
    build:
      context: ./Dockerfiles
      dockerfile: ApiCore.Node
    container_name: "apicore"
    ports:
      - 9110:9110
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - PROCESS_MEMORY_PORT=9091
      - COREAPI_URL=apicore
      - COREAPI_PORT=9110
  event_manager:
    build:
      context: ./Dockerfiles
      dockerfile: EventManager
    container_name: "event_manager"
    ports:
      - 8081:8081
    environment:
      - EXECUTOR_HOST=executor
      - ROUTER_HOST=http_router
  executor:
    build:
      context: ./Dockerfiles
      dockerfile: Executor
    container_name: "executor"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PROCESS_MEMORY_URL=process_memory
      - PROCESS_MEMORY_PORT=9091
      - COREAPI_URL=apicore
      - COREAPI_PORT=9110
      - EVENT_MANAGER_URL=event_manager
      - EVENT_MANAGER_PORT=8081
    ports:
      - 8000:8000
  registry:
    image: "registry:2"
    container_name: "registry"
    ports:
      - 5000:5000
  influxdb:
      image: influxdb:alpine
      container_name: "influxdb"
      ports:
        - "8086:8086"
  chronograf:
    image: chronograf:alpine
    container_name: "chronograf"
    ports:
      - 8888:8888
  grafana:
    image: grafana/grafana
    container_name: "grafana"
    ports:
      - 8581:3000
networks:
  default:
    external:
      name: plataforma_network