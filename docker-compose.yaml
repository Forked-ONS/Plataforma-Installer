version: "2"

services:
  postgres:
    image: postgres:latest
    container_name: "postgres"
    ports:
      - 5432:5432
  mongo:
    image: mongo:latest
    container_name: "mongo"
    ports:
      - 27017:27017
  adminer:
    image: adminer:latest
    container_name: "adminer"
    ports:
      - 8080:8080
  process_memory:
    build:
      context: ./Dockerfiles
      dockerfile: ProcessMemory
    container_name: "process_memory"
    ports:
      - 9091:9091
    environment:
      - MONGO_HOST=mongo
  apicore:
    build:
      context: ./Dockerfiles
      dockerfile: ApiCore
    container_name: "apicore"
    ports:
      - 9110:9110
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - PROCESS_MEMORY_PORT=9091
      - COREAPI_URL=apicore
      - COREAPI_PORT=9110
  git-server:
    image: pmoneda/git-server
    container_name: git-server
    ports:
      - "2222:22"
    volumes:
      - ~/git-server/keys:/git-server/keys
      - ~/git-server/repos:/git-server/repos
  event_manager:
    build:
      context: ./Dockerfiles
      dockerfile: EventManager
    container_name: "event_manager"
    ports:
      - 8081:8081
    environment:
      - EXECUTOR_HOST=executor
      - PROCESS_MEMORY_HOST=process_memory
      - ROUTER_HOST=http_router
      - INFLUX_HOST=influxdb
      - APICORE_HOST=apicore
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_API_PORT=15672
      - RABBITMQ_AMQP_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - MONGO_HOST=mongo:27017
    depends_on:
      - "rabbitmq"
  deployer:
    build:
      context: ./Dockerfiles
      dockerfile: Deployer
    container_name: "deployer"
    ports:
      - 6970:6970
    environment:
      - GIT_SERVER_PATH=/git-server
      - DEPLOY_PATH=/worker/deploys
      - GET_SERVER_HOST=git-server
      - DEPLOYER_HOST=deployer
      - APICORE_HOST=apicore
      - EVENT_MANAGER_HOST=event_manager
    volumes:
      - ~/git-server/repos:/git-server/repos
      - ~/git-server/keys:/git-server/keys
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "apicore"
  executor:
    build:
      context: ./Dockerfiles
      dockerfile: Executor
    container_name: "executor"
    environment:
      - PROCESS_MEMORY_URL=process_memory
      - PROCESS_MEMORY_PORT=9091
      - COREAPI_URL=apicore
      - COREAPI_PORT=9110
      - EVENT_MANAGER_URL=event_manager
      - EVENT_MANAGER_PORT=8081
      - EXEC=gunicorn -b :8000 runner.api:runner_api
    ports:
      - 8000:8000
  authprovider:
    build:
      context: ./Dockerfiles
      dockerfile: AuthProvider
    container_name: "authprovider"
    environment:
      - PORT=8085
    ports:
      - 8085:8085
  celery:
    build:
      context: ./Dockerfiles
      dockerfile: Celery
    container_name: "celery"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DEBUG_MODE=True
      - PROCESS_MEMORY_URL=process_memory
      - PROCESS_MEMORY_PORT=9091
      - COREAPI_URL=apicore
      - COREAPI_PORT=9110
      - EVENT_MANAGER_URL=event_manager
      - EVENT_MANAGER_PORT=8081
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - C_FORCE_ROOT=true
    depends_on:
      - "event_manager"
  registry:
    image: "registry:2"
    container_name: "registry"
    ports:
      - 5000:5000
  influxdb:
    image: influxdb:alpine
    container_name: "influxdb"
    ports:
      - "8086:8086"
  rabbitmq:
    image:  rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
  chronograf:
    image: chronograf:alpine
    container_name: "chronograf"
    ports:
      - 8888:8888
networks:
  default:
    external:
      name: plataforma_network
